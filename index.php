<?/*
-------------------------------------- №1 - №2 ------------------------------------

СЕРВЕР - программа (не железо), Его задача принять, отдать. Аналог с магазином.
Машина одновременно может быть и сервером и клиентом.

была придумана система OSI:
- Прикладная (http, smtp)
- Представительная (xml, smb)
- Сеансовый (tls, ssl, netbios)
- Транспортный (tcp, udp)
- Сетевой (ip, icmp)
- Канальный (ethernet, wifi)
- Физический (электричество)

Но она костыльная, была придумана когда все уже заработало. Уровни перепутаны меж собой.

ПРОТОКОЛ - правил дорожного движения.

Чтобы коммуницировать придумали ip адреса и их объединяют в подсети используя маски сети.
Способ связи в своей сети и с другой сетью отличается, поэтому также используется маска сети.
	маска сети
	255.255.255.0
		IP адреса
		213.180.204.8 - благодаря маске здесь есть адрес сети и адрес компа.

Полезная команда
ipconfig /all       - инфо о сетевых подключениях.

DHCP-сервер - сервер раздает ip адреса.
MAC-адрес - физический адрес, нужен только для коммуникацции только в локальной сети
Маршрутизатор, шлюз - с одной стороны в одна сеть, с другой стороны - другая

Одна машина может устанавливать много соединений ПАРАЛЛЕЛЬНО (используя порты)

Порт - это число(виртуальное, физически его нет, как добавочный телефон).
Поэтому содинение устанавливается не только по IP, но и по порту
Сокет - ip+port.

Маршрутизатор - который между двумя сетями, Используя систему NAT -  просто сопоставляет IP и порт одной сети, IP и порт другой сети.


Полезная команда
ping ya.ru      - посылает по стандарту 4 пакета на конечную машину. - Проверка маршрута. (пинг до роутера, пинг до провайдера.)
tracert ya.ru   - тоже проверка маршрута


Общение на более высоком уровне проискходит при помощи служб интернета.
ftp-сервер - ftp-сервер, ftp-клиент общаются по ftp правилам (протоколу)
www-служба - web-сервер, web-клиент(браузер) общаются по http правилам.
dns-служба - dns-сервер.
Службы по умолчанию прослушивают определенные порты (www-80,ftp-21)

Полезная команда
netstat -ano - просмотреть занятые порты , скрин.
Утилита TCPView - можно в реальном времени посмотреть порты (Утилиты Марка Руссиновича)


dns-служба - сопоставляет ip адрес с названием. Делится на домменные уровни. Все кешируется.
Помимо этого все кешируется и в операционной системе!!

файл hosts - в операционной системе можно задать днс запись.

Полезная команда
ipconfig /displaydns - закеширование днс в операционной сиситеме.
nslookup ya.ru - узнать адрес ya.ru



-------------------------------------- №3 - №4 ------------------------------------


После устновления соединения, послыаются запросы.

Клиент посылает запрос

		Строка запроса
		GET /folder/index.html HTTP/1.1

		Заголовки запроса ( предназначены серверу и разработчику)
		Host: mysite.ru /n/r (обязательный заголовок)
		User-Agent: Mozilla/5.0 /n/r
		...
		/n/r - пустая строка, последний заголовок

		Под каждый заголовок заводится переменная с префиксом HTTP (HTTP_USER_AGENT)


Сервер отвечает

		Строка ответа
		HTTP/1.1 200 OK

		Заголовки ответа (сервер дает четкие указания)
		Date: Sun,14 Aug 2016 /n/r
		Content-Length: 34354
		Content-Type:text/html
		/n/r - последний заголовок
        тело ответа

		Статусы - они декларативны ( 200, 404, .. просто для информации, можем сами послать другим статусом ).
		1** -
		2** - успешное выполнение
		3** - переадресация
		4** - ошибка на стороне клиента
		5** - ошибка на стороне сервера



Данные от клиента получаем при помощи форм.

		GET /folder/index.html?login=Vasia&pwd=parol HTTP/1.1
		GET-запрос - строка запроса длиная, не безопасно.
		Строка запроса - дай адрес с доп параметрами login=Vasia&pwd=parol


		POST /action HTTP/1.1
		POST-запрос - доп параметры передаются в теле запроса.
		имеет свои POST заголовки
		Referer - кто запросил
		content-length - длина
		content-type - тип(например, что отправил именно форма)


		Для хранения состояния используются куки.
		Используется заголовки Set-Cookie и Cookie.


Серверы по популярности:
		Apache
		nginx
		Microsoft
		Google



-------------------------------------- №5 ------------------------------------



Apache     - Исторически сложилось, стал популярнее. Бесплатный, на хостинге (расшариемость) используется.
Есть еще IIS - майкросовтовское, менее популярное.

Версии. Версии выпускаются редко, из-зи поддержки.
Apache 1.3 - существовало очень долго.
Apache 2.4 - перешли, сказали все отказываемся от более ранних версий.


Основные директории
	bin     - испольняемые файлы, утилиты
			httpd.exe - главный файл, который мы будем запускать.

	modules - расширения, модули. Подключаем или отключаем необхоимые модули.
	conf    - конфигурация
			httpd.conf - самая главная настройка сервера. Здесь находятся основные настройки.
			папка extra - здесь допполнительные настройки, которые подключаем из основного httpd.conf

Первым делом меняем корень, куда распаковали appache - httpd.conf
	ServerRoot(40строка)
	DocumentRoot(256строка)
	<directory(257строка)


Запуск


31 минута


























*/